{
    "version": 3,
    "file": "world.js",
    "sourceRoot": "",
    "sources": [
        "/ts/world.ts"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "interface Matrix {\r\n    flatten(): number[];\r\n}\r\n\r\nexport class Camara {\r\n    fv = 45;\r\n    width = 640;\r\n    height = 480;\r\n    get radio() {\r\n        return this.width / this.height;\r\n    }\r\n    nearClip = 0.1;\r\n    farClip = 100;\r\n    get matrix(): Matrix {\r\n        return makePerspective(this.fv, this.radio, this.nearClip, this.farClip);\r\n    }\r\n}\r\n\r\nexport abstract class Shader {\r\n    abstract init(gl: WebGLRenderingContext);\r\n    abstract render(world: World, mesh: Mesh, camaraMatrixFlat: number[]);\r\n}\r\n\r\nexport class VertexColorShader extends Shader {\r\n    vertexShaderFactory: (gl: WebGLRenderingContext) => WebGLShader;\r\n    fragementShaderFactory: (gl: WebGLRenderingContext) => WebGLShader;\r\n\r\n    aVertexPosition: number;\r\n    aVertexColor: number;\r\n    shaderProgram: WebGLProgram;\r\n\r\n    init(gl: WebGLRenderingContext) {\r\n        const shaderProgram = this.shaderProgram = gl.createProgram();\r\n        const vertexShader = this.vertexShaderFactory(gl);\r\n        const fragementShader = this.fragementShaderFactory(gl);\r\n        gl.attachShader(shaderProgram, vertexShader);\r\n        gl.attachShader(shaderProgram, fragementShader);\r\n        gl.linkProgram(shaderProgram);\r\n\r\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n            alert(\"Unable to initialize the shader program: \" + gl.getProgramInfoLog(shaderProgram));\r\n        }\r\n\r\n        gl.useProgram(shaderProgram);\r\n\r\n        this.aVertexPosition = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n        gl.enableVertexAttribArray(this.aVertexPosition);\r\n\r\n        this.aVertexColor = gl.getAttribLocation(shaderProgram, \"aVertexColor\");\r\n        gl.enableVertexAttribArray(this.aVertexColor);\r\n    }\r\n\r\n    render(world: World, mesh: Mesh, camaraMatrixFlat: number[]) {\r\n        const gl = world.gl;\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vertexBuffer);\r\n        gl.vertexAttribPointer(this.aVertexPosition, 3, gl.FLOAT, false, 0, 0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vertexColorBuffer);\r\n        gl.vertexAttribPointer(this.aVertexColor, 4, gl.FLOAT, false, 0, 0);\r\n\r\n        const pUniform = gl.getUniformLocation(this.shaderProgram, \"uPMatrix\");\r\n        gl.uniformMatrix4fv(pUniform, false, new Float32Array(camaraMatrixFlat));\r\n\r\n        const mvUniform = gl.getUniformLocation(this.shaderProgram, \"uMVMatrix\");\r\n        gl.uniformMatrix4fv(mvUniform, false, new Float32Array(mesh.translate.flatten()));\r\n\r\n        gl.drawElements(gl.TRIANGLES, 36, gl.UNSIGNED_SHORT, 0);\r\n    }\r\n}\r\n\r\nexport class Mesh {\r\n    vertices: number[];\r\n    faces: number[];\r\n    verticesColor: number[][];\r\n    shader: Shader;\r\n    translate: Matrix;\r\n\r\n    vertexBuffer: WebGLBuffer;\r\n    vertexColorBuffer: WebGLBuffer;\r\n    facesBuffer: WebGLBuffer;\r\n\r\n    init(gl: WebGLRenderingContext) {\r\n        this.vertexBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.vertices), gl.STATIC_DRAW);\r\n\r\n        this.vertexColorBuffer = gl.createBuffer;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexColorBuffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this.verticesColor), gl.STATIC_DRAW);\r\n\r\n        this.facesBuffer = gl.createBuffer;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.facesBuffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Float32Array(this.faces), gl.STATIC_DRAW);\r\n    }\r\n    render(world: World, camaraMatrixFlat: number[]) {\r\n        this.shader.render(world, this, camaraMatrixFlat);\r\n    }\r\n}\r\n\r\nexport class World {\r\n    camara: Camara;\r\n    meshes: Mesh[] = [];\r\n    gl: WebGLRenderingContext;\r\n\r\n    attachObject(mesh: Mesh) {\r\n        this.meshes.push(mesh);\r\n        mesh.init(this.gl);\r\n        mesh.shader.init(this.gl);\r\n    }\r\n\r\n    render() {\r\n        const gl = this.gl;\r\n\r\n        // tslint:disable-next-line:no-bitwise\r\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n        const camaraMatrixFlat = this.camara.matrix.flatten();\r\n        for (let index = 0; index < this.meshes.length; index++) {\r\n            const mesh = this.meshes[index];\r\n            mesh.render(this, camaraMatrixFlat);\r\n        }\r\n    }\r\n}\r\n"
    ]
}